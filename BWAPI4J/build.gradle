import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

group 'org.openbw.bwapi4j'
version '0.8'

mainClassName = 'org.openbw.bwapi4j.BW'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.3"
    }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenCentral()
    jcenter()
    flatDir {
        dirs 'lib'
    }
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    compile group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'

    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.commons:commons-compress:1.16.1'
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
    }
}

shadowJar {
//    relocate 'org.apache.commons', 'bwapi4j.org.apache.commons'
    classifier = null
    from ('../BWAPI4JBridge/BWAPI4JBridge/Release') {
        include '*.dll'
        include '*.so'
    }
}

test {
    // stefanglase, Nov 27 2010, https://stackoverflow.com/a/4292739
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED
//                TestLogEvent.SKIPPED,
//                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

//        // set options for log level DEBUG and INFO
//        debug {
//            events TestLogEvent.STARTED,
//                    TestLogEvent.FAILED,
//                    TestLogEvent.PASSED,
//                    TestLogEvent.SKIPPED,
//                    TestLogEvent.STANDARD_ERROR,
//                    TestLogEvent.STANDARD_OUT
//            exceptionFormat TestExceptionFormat.FULL
//        }
//        info.events = debug.events
//        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

allprojects {
    // This is a temporary fix for ignoring incorrect javadocs formatting.
    // The javadoc formatting should probably be fixed properly.
    // For now, we'll disable the strict formatting enforcement flag (doclint).
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task generateJniHeaders(type:Exec) {
    def classpath = sourceSets.main.output.classesDir
    def nativeIncludes = "src/native/include"
    commandLine "javah", "-jni", "-verbose", "-d", nativeIncludes, "-classpath", classpath,
            "$mainClassName",
            "bwta.BWTA",
            "bwta.Polygon",
            "bwta.BaseLocation",
            "org.openbw.bwapi4j.BWMapImpl",
            "org.openbw.bwapi4j.InteractionHandler",
            "org.openbw.bwapi4j.MapDrawer",
            "org.openbw.bwapi4j.DamageEvaluator",
            "org.openbw.bwapi4j.unit.Unit"

    dependsOn classes
}
